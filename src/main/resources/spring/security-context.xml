<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:security="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">



	<bean id="customAccessDenied"
		  class="com.thearc.security.CustomAccessDeniedHandler"></bean>

	<!-- <bean id="customLoginSuccess" class="com.thearc.security.CustomLoginSuccessHandler"></bean> -->
	<!-- <bean id="customPasswordEncoder" class="com.thearc.security.CustomNoOpPasswordEncoder"></bean> -->

	<bean id="bcryptPasswordEncoder"
		  class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<bean id="customUserDetailsService"
		  class="com.thearc.security.CustomUserDetailsService"></bean>

<!--
	<bean id="csrfMatcher" class="org.springframework.security.web.util.matcher.OrRequestMatcher">
		<constructor-arg>
			<bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
				<constructor-arg name="pattern" value="/user/jusoPopup"/>
				<constructor-arg name="httpMethod" value="POST"/>
			</bean>
		</constructor-arg>
	</bean>
-->


<!--
        <bean id="csrfMatcher"	class="AndRequestMatcher">
            <constructor-arg>
                <bean class="org.springframework.security.web.util.matcher.NegatedRequestMatcher">
                    <bean class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
                        <constructor-arg value="/chat/**"/>
                    </bean>
                </bean>
            </constructor-arg>
        </bean>-->


	<security:http pattern="/user/jusoPopup" security="none"></security:http>
	<security:http pattern="/login" security="none"></security:http>
	<security:http>

		<!--<security:intercept-url pattern="/sample/all"
								access="permitAll" />

		<security:intercept-url
				pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
-->
<!--		<security:intercept-url pattern="/sample/admin"
								access="hasRole('ROLE_ADMIN')" />-->

		<security:intercept-url pattern="/sboard/list/supporter"
								access="hasRole('ROLE_SUPPORTER') and hasRole('ROLE_ADMIN')" />

        <!--<security:csrf disabled="true" ></security:csrf>-->

		<!--<http security="none" pattern="/pathWhereCSRFWillBeIgnored/**"/>-->

		<!--<security:csrf request-matcher-ref="csrfMatcher"/>-->
		<!--<security:csrf request-matcher-ref="csrfMatcher"/>-->

		<!--<security:intercept-url pattern="/user/jusoPopup" request-matcher-ref="csrfMatcher"/>-->

		<security:access-denied-handler
				ref="customAccessDenied" />

		<!-- <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"
			/> -->

		<!--<security:form-login login-page="/customLogin" />-->

		<!-- default-target-url은 목적지 없이 로그인된 녀석일경우 기본 url을 / 이 아닌 /sboard/main으로 해주는것으로 보인다-->
		<security:form-login login-page="/user/login" default-target-url="/sboard/main" />

		<!-- <security:csrf disabled="true"/> -->

		<!--<security:logout logout-url="/customLogout"-->
						 <!--invalidate-session="true" />-->

		<security:remember-me
				data-source-ref="dataSource" token-validity-seconds="604800" />

		<security:logout logout-url="/customLogout" logout-success-url="/sboard/main"
						 invalidate-session="true" delete-cookies="remember-me,JSESSION_ID"   />


	</security:http>



	<!-- <security:authentication-manager> <security:authentication-provider>
		<security:user-service> <security:user name="member" password="{noop}member"
		authorities="ROLE_MEMBER"/> <security:user name="admin" password="{noop}admin"
		authorities="ROLE_MEMBER, ROLE_ADMIN"/> </security:user-service> </security:authentication-provider>
		</security:authentication-manager> -->

	<!-- <security:authentication-manager> <security:authentication-provider>
		<security:jdbc-user-service data-source-ref="dataSource" /> <security:jdbc-user-service
		data-source-ref="dataSource" users-by-username-query="select userid , userpw
		, enabled from tbl_member where userid = ? " authorities-by-username-query="select
		userid, auth from tbl_member_auth where userid = ? " /> <security:password-encoder
		ref="customPasswordEncoder" /> <security:password-encoder ref="bcryptPasswordEncoder"
		/> </security:authentication-provider> </security:authentication-manager> -->


	<security:authentication-manager>

		<security:authentication-provider
				user-service-ref="customUserDetailsService">

			<security:password-encoder
					ref="bcryptPasswordEncoder" />

		</security:authentication-provider>

	</security:authentication-manager>


</beans>
